8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     22:06:33  12/04/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE MAIN.ASM M1 EP DB


LOC  OBJ                  LINE     SOURCE

                             1             NAME    MAIN
                             2     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             3     ;                                                                            ;
                             4     ;                                 MAIN LOOP                                  ;
                             5     ;                       Used to test Homework 4 (Display)                    ;
                             6     ;                                  EE/CS  51                                 ;
                             7     ;                                                                            ;
                             8     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             9     
                            10     ; Description:      This is the main loop used to execute the display code.
                            11     ;                   It calls initialization functions to get the display ready
                            12     ;                   for the event handler. Once the event handler and timer
                            13     ;                   (which drives the event handler) are set up,
                            14     ;                   DisplayTest, a function written to test this code,
                            15     ;                   is called. It runs some basic tests on the display
                            16     ;                   to ensure that it is working properly.
                            17     ;                   After DisplayTest finishes, one can write to print
                            18     ;                   on the display by using "regs AX ____" where the blank
                            19     ;                   can be filled by any decimal/hexadecimal number. 
                            20     ; Input:            None.
                            21     ; Output:           None.
                            22     ;
                            23     ; User Interface:   No real user interface.
                            24     ; Error Handling:   None. 
                            25     ;
                            26     ; Algorithms:       None.
                            27     ; Data Structures:  None.
                            28     ;
                            29     ; Known Bugs:       None.
                            30     ; Limitations:      None.
                            31     ;
                            32     ; Revision History:
                            33     ;    10/22/16       Meera Krishnamoorthy    created file based on Homework 2
                            34     ;                                           test code and modified
                            35     
                            36     
                            37     
                            38     ;definitions
                            39     
                            40     CGROUP  GROUP   CODE
                            41     DGROUP  GROUP   DATA
                            42          
----                        43     CODE    SEGMENT PUBLIC 'CODE'
                            44             EXTRN   InitCS:NEAR
                            45             EXTRN   ClrIRQVectors:NEAR
                            46             EXTRN   InstallHandler:NEAR
                            47             EXTRN   InitTimer:Near
                            48             EXTRN   InitVariables:NEAR
                            49             EXTRN   DisplayTest:NEAR
                            50             ASSUME  CS:CGROUP, DS:DGROUP
8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     22:06:33  12/04/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

                            51             
                            52     ;external function declarations
                            53     
                            54     
0000                        55     START:  
                            56     
0000                        57     MAIN:
0000 B8----         R       58             MOV     AX, STACK               ;initialize the stack pointer
0003 8ED0                   59             MOV     SS, AX
0005 BCE00190       R       60             MOV     SP, OFFSET(TopOfStack)
                            61     
0009 B8----         R       62             MOV     AX, DATA                ;initialize the data segment
000C 8ED8                   63             MOV     DS, AX
                            64     
                            65     
000E E80000         E       66             CALL    InitCS                  ;initialize the 80188 chip selects
                            67                                             ;assumes LCS and UCS already setup
                            68     
0011 E80000         E       69             CALL    ClrIRQVectors           ;clear (initialize) interrupt vector table
                            70     
                            71                                             
0014 E80000         E       72             Call    InitVariables           ;initialize the variables for the timer 
                            73                                             ;event handler
                            74     
0017 E80000         E       75             CALL    InstallHandler          ;install the event handler
                            76                                             ;   ALWAYS install handlers before
                            77                                             ;   allowing the hardware to interrupt.
                            78     
001A E80000         E       79             CALL    InitTimer               ;initialize the internal timer
001D FB                     80             STI                             ;and finally allow interrupts.
001E E80000         E       81             CALL    DisplayTest
0021 EBFE                   82             Forever: JMP    Forever         ;sit in an infinite loop, nothing to
                            83                                             ;do in the background routine
0023 F4                     84             HLT                             ;never executed (hopefully)
                            85     
----                        86     CODE ENDS
                            87     
                            88     ;the data segment
                            89     
----                        90     DATA    SEGMENT PUBLIC  'DATA'
                            91     
                            92     
----                        93     DATA    ENDS
                            94     
                            95     
                            96     
                            97     
                            98     ;the stack
                            99     
----                       100     STACK   SEGMENT STACK  'STACK'
                           101     
0000 (80                   102                     DB      80 DUP ('Stack ')       ;240 words
     537461636B20
     )
                           103     
8086/87/88/186 MACRO ASSEMBLER    MAIN                                                     22:06:33  12/04/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

01E0                       104     TopOfStack      LABEL   WORD
                           105     
----                       106     STACK   ENDS
                           107     
                           108     
                           109     
                           110     END     START

ASSEMBLY COMPLETE, NO ERRORS FOUND
