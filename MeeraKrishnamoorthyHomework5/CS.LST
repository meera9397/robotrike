8086/87/88/186 MACRO ASSEMBLER    CS                                                       22:09:48  12/04/;6  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE CS
OBJECT MODULE PLACED IN CS.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE CS.ASM M1 EP DB


LOC  OBJ                  LINE     SOURCE

                             1            NAME  CS
                             2     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             3     ;                                                                            ;
                             4     ;                                    CS                                   ;
                             5     ;                     Event Handler/ Timer related functions                 ;
                             6     ;                 used to display strings/ numbers on a display              ;
                             7     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             8     
                             9     ; Description:      This program contains the event handler for the 
                            10     ;                   display functions, a function to deal with illegal
                            11     ;                   events, and several functions to initialize what is
                            12     ;                   necessary for the event handler to run (the timer, illegal
                            13     ;                   eventhandler, and the PCS)
                            14     ; Table of Contents:
                            15     ; 1) InitCS: initializes peripheral chip selects on 80188
                            16     ;
                            17     ; Input:            None.
                            18     ; Output:           None.
                            19     ;
                            20     ; User Interface:   None. 
                            21     ; Error Handling:   None.
                            22     ;
                            23     ; Algorithms:       None.
                            24     ; Data Structures:  None.
                            25     ;
                            26     ; Revision History:
                            27     ;      10/30/16  Meera Krishnamoorthy   used functions written by Glen George
                            28     ;                                       to use for event handling/ timers
                            29     
                            30     
                            31     ; local include files
                            32 +1  $INCLUDE(CS.INC)
                      =1    33     ; Chip Select Unit Definitions
                      =1    34     
                      =1    35     ; Addresses
  FFA4                =1    36     PACSreg         EQU     0FFA4H          ;address of PACS register
  FFA8                =1    37     MPCSreg         EQU     0FFA8H          ;address of MPCS register
                      =1    38     
                      =1    39     ; Control Register Values
  0003                =1    40     PACSval         EQU     00003H          ;PCS base at 0, 3 wait states
                      =1    41                                             ;0000000000------  starts at address 0
                      =1    42                                             ;----------000---  reserved
                      =1    43                                             ;-------------0--  wait for RDY inputs
                      =1    44                                             ;--------------11  3 wait states
  0183                =1    45     MPCSval         EQU     00183H          ;PCS in I/O space, use PCS5/6, 3 wait states
                      =1    46                                             ;0---------000---  reserved
                      =1    47                                             ;-0000001--------  MCS is 8KB
                      =1    48                                             ;--------1-------  output PCS5/PCS6
                      =1    49                                             ;---------0------  PCS in I/O space
                      =1    50                                             ;-------------0--  wait for RDY inputs
8086/87/88/186 MACRO ASSEMBLER    CS                                                       22:09:48  12/04/;6  PAGE    2


LOC  OBJ                  LINE     SOURCE

                      =1    51                                             ;--------------11  3 wait states
                      =1    52     
                            53     
                            54     
                            55     CGROUP  GROUP   CODE
                            56     
----                        57     CODE SEGMENT PUBLIC 'CODE'
                            58     
                            59             ASSUME  CS:CGROUP
                            60     
                            61             EXTRN   MuxSegPatterns:NEAR
                            62             EXTRN   Scan:NEAR
                            63     
                            64     ; InitCS
                            65     ;
                            66     ; Description:       Initialize the Peripheral Chip Selects on the 80188.
                            67     ;
                            68     ; Operation:         Write the initial values to the PACS and MPCS registers.
                            69     ;
                            70     ; Arguments:         None.
                            71     ; Return Value:      None.
                            72     ;
                            73     ; Local Variables:   None.
                            74     ; Shared Variables:  None.
                            75     ; Global Variables:  None.
                            76     ;
                            77     ; Input:             None.
                            78     ; Output:            None.
                            79     ;
                            80     ; Error Handling:    None.
                            81     ;
                            82     ; Algorithms:        None.
                            83     ; Data Structures:   None.
                            84     ;
                            85     ; Registers Changed: AX, DX
                            86     ; Stack Depth:       0 words
                            87     ;
                            88     ; Author:            Glen George
                            89     ; Last Modified:     Oct. 29, 1997
0000                        90     InitCS  PROC    NEAR
                            91           PUBLIC      InitCS
                            92     
                            93     
0000 BAA4FF                 94             MOV     DX, PACSreg     ;setup to write to PACS register
0003 B80300                 95             MOV     AX, PACSval
0006 EE                     96             OUT     DX, AL          ;write PACSval to PACS (base at 0, 3 wait states)
                            97     
0007 BAA8FF                 98             MOV     DX, MPCSreg     ;setup to write to MPCS register
000A B88301                 99             MOV     AX, MPCSval
000D EE                    100             OUT     DX, AL          ;write MPCSval to MPCS (I/O space, 3 wait states)
                           101     
                           102     
000E C3                    103             RET                     ;done so return
                           104     
                           105     
8086/87/88/186 MACRO ASSEMBLER    CS                                                       22:09:48  12/04/;6  PAGE    3


LOC  OBJ                  LINE     SOURCE

                           106     InitCS  ENDP
                           107     
                           108     
----                       109     CODE ENDS
                           110     
                           111     
                           112     END

ASSEMBLY COMPLETE, NO ERRORS FOUND
